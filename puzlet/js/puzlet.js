// Generated by CoffeeScript 1.3.3
(function() {
  var MathJaxProcessor, getBlab, htmlNode;

  window.$pz = {};

  window.$blab = {};

  MathJaxProcessor = (function() {

    MathJaxProcessor.prototype.source = "http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default";

    MathJaxProcessor.prototype.mode = "HTML-CSS";

    function MathJaxProcessor() {
      var configScript, mathjax,
        _this = this;
      this.outputId = "codeout_html";
      $blab.mathjaxConfig = function() {
        $.event.trigger("mathjaxPreConfig");
        window.MathJax.Hub.Config({
          jax: ["input/TeX", "output/" + _this.mode],
          tex2jax: {
            inlineMath: [["$", "$"], ["\\(", "\\)"]]
          },
          TeX: {
            equationNumbers: {
              autoNumber: "AMS"
            }
          },
          elements: [_this.outputId, "blab_refs"],
          showProcessingMessages: false,
          MathMenu: {
            showRenderer: true
          }
        });
        return window.MathJax.HTML.Cookie.Set("menu", {
          renderer: _this.mode
        });
      };
      configScript = $("<script>", {
        type: "text/x-mathjax-config",
        text: "$blab.mathjaxConfig();"
      });
      mathjax = $("<script>", {
        type: "text/javascript",
        src: this.source
      });
      $("head").append(configScript).append(mathjax);
      $(document).on("htmlOutputUpdated", function() {
        return _this.process();
      });
    }

    MathJaxProcessor.prototype.process = function() {
      var Hub, configElements, queue,
        _this = this;
      if (typeof MathJax === "undefined" || MathJax === null) {
        return;
      }
      this.id = this.outputId;
      Hub = MathJax.Hub;
      queue = function(x) {
        return Hub.Queue(x);
      };
      queue(["PreProcess", Hub, this.id]);
      queue(["Process", Hub, this.id]);
      configElements = function() {
        return Hub.config.elements = [_this.id];
      };
      return queue(configElements);
    };

    return MathJaxProcessor;

  })();

  getBlab = function() {
    var blab, css, h, p, query;
    query = location.search.slice(1);
    if (!query) {
      return null;
    }
    h = query.split("&");
    p = h != null ? h[0].split("=") : void 0;
    blab = p.length && p[0] === "blab" ? p[1] : null;
    if (!blab) {
      return null;
    }
    css = $("<link>", {
      rel: "stylesheet",
      type: "text/css",
      href: "/" + blab + "/main.css"
    });
    $(document.head).append(css);
    return $.get("/" + blab + "/main.html", function(data) {
      $("#codeout_html").append(Wiky.toHtml(data));
      return new MathJaxProcessor;
    });
  };

  htmlNode = function() {
    var html;
    html = "<div id=\"code_nodes\" data-module-id=\"b00cv\">\n<div class=\"code_node_container\" id=\"code_node_container_html\" data-node-id=\"html\" data-filename=\"main.html\">\n	<div class=\"code_node_output_container\" id=\"output_html\">\n		<div class=\"code_node_html_output\" id=\"codeout_html\"></div>\n	</div>\n</div>\n</div>";
    return $("#app_container").append(html);
  };

  htmlNode();

  getBlab();

}).call(this);
